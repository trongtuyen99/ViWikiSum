keyword: Babel (trình biên dịch)
url: https://hocjavascript.net/tong-quan/babel-js-la-gi-tai-sao-dung-babel-js/
content:
Khi làm việc với các Framework JavaScript hiện nay, chắc hẳn chữ “Babel” hay “Babel JS” sẽ đập vào mặt bạn, nhất là khi tạo project mới đúng không nào? Vậy bạn đã từng thắc mắc “Babel JS là gì” chưa, “Tại sao lúc nào tạo project mà cũng nhìn thấy nó nhỉ?”. Hôm nay, mình sẽ cùng các bạn tìm hiểu về Babel JS nhé!. Babel hay Babel JS là một trình biên dịch JavaScript, mã nguồn mở và miễn phí. Babel được sử dụng để biên dịch ECMAScript (ES) thành phiên bản tương thích ngược với JavaScript có thể chạy trên các môi trường JavaScript cũ hơn. Babel là công cụ phổ biến để sử dụng các tính năng mới nhất trong JavaScript. Hãy nói về ECMAScript (ES), mỗi năm họ cho ra 1 “phiên bản” mới dành cho JavaScript, rất nhiều các công nghệ mới được cập nhật. Có thể chỉ là một vài cập nhật rất nhỏ, có khi là một cuộc cách mạng lớn. Dù sao đi chăng nữa thì vẫn có sự thay đổi. Vì vậy, nếu dự án của bạn lớn và liên tục phải bảo trì và cập nhật các tính năng mới như Google, Facebook,… chẳng hạn. Bạn cứ thử tượng tưởng khi công nghệ thay đổi thì mình cùng phải thay đổi theo nó, do đó một số code cũ có khi sẽ không thể chạy được và cần cập nhật. Điều này tốn rất nhiều thời gian và có thể phát sinh ra nhất nhiều lỗi. Nhưng khi có Babel JS, nó sẽ giúp chúng ta chuyển đổi các code mới về các chuẩn code cũ hơn. Lúc đó, code của chúng ta sẽ có thể chạy được trên các hệ điều hành, trình duyệt cũ,… Thật tuyệt vời phải không nào?. Ngoài ra, Babel JS cũng được đóng gói vào các package. Để cài đặt, chúng ta cần thông qua npm:. Với cách này, trang web của bạn sẽ cải thiện được hiệu năng, tốc độ và sử dụng được toàn bộ tính năng của Babel JS mà không có lỗi phát sinh. Chúng ta có hàm Person, có thể được sử dụng như một prototype constructor và hàm classCallCheck để kiểm tra kiểu của instance. ES6 cũng có một cách định nghĩa chuỗi mới. Ký hiệu backtick () cho phép bạn tạo chuỗi nhiều dòng. Điều này đặc biệt hữu ích khi xác định các template trong JavaScript. Arrow Function (Fat Arrows) hay còn được gọi là hàm “mũi tên béo”, cung cấp cho chúng ta một cú pháp hay để xác định các hàm ẩn danh. Từ khóa this được đặt trong JavaScript để trở thành đối tượng ngay trước dấu chấm khi hàm được gọi. Điều này là hợp lý, nhưng thường gây khó chịu, vì nó đôi khi yêu cầu cái này phải được lưu trong cái kia. Fat Arrows sẽ giải quyết vấn đề này bằng cách duy trì giá trị hiện tại của nó. Vấn đề này gọi là scope. Chúng ta có thể thấy rằng giá trị của this đã được lưu trữ trong một biến bên trong clousure. Hãy tham gia nhóm Học lập trình để thảo luận thêm về các vấn đề cùng quan tâm.
