keyword: Hàm tạo (lập trình hướng đối tượng)
url: http://bugnetproject.com/oop-la-gi-giai-thich-lap-trinh-huong-doi-tuong/
content:
Lập trình hướng đối tượng OOP được biết đến là thuật ngữ rất quan trọng và được sử dụng khá phổ biến hiện nay. OOP là công cụ đắc lực hỗ trợ, cho phép các lập trình viên tạo ra các đối tượng. Vậy OOP là gì? Đặc điểm của OOP và vai trò của chúng như thế nào? Những thắc mắc của quý vị về lập trình hướng đối tượng sẽ được làm rõ tường tận ngay dưới đây. OOP là tên viết tắt của Object-oriented programming – lập trình hướng đối tượng. Đây là một mẫu hình lập trình được phát triển dựa trên khái niệm công nghệ đối tượng. Trong đó, đối tượng chứa đựng các dữ liệu, trên các trường thường được gọi là thuộc tính. Mã nguồn được tổ chức thành các phương thức giúp cho đối tượng có thể truy xuất, hiệu chỉnh các trường dữ liệu của đối tượng khác mà đối tượng hiện tại có tương tác. Hiểu một cách đơn giản, lập trình hướng đối tượng hỗ trợ công nghệ OOP. Có tác dụng tăng năng suất và đẩy nhanh tiến độ công việc. Từ đó cho phép các lập trình viên tác động vào các chủ thể như trong thực tế. Qua đó để sửa lỗi phần mềm, chủ động bảo trì, duy trì hệ thống. Ngôn ngữ lập trình hướng đối tượng rất đa dạng, phần lớn là các ngôn ngữ lập trình theo lớp. Mỗi đối tượng có khả năng nhận thông báo, xử lý dữ liệu và gửi trả lời đến các đối tượng khác hay đến môi trường. Tính đóng gói và che dấu thông tin của OOP thường không cho phép người dùng sử dụng đối tương để thay đổi trạng thái nội tại của đối tượng. Tính chất này đảm bảo sự toàn vẹn của đối tượng. Chỉ có các phương thức nội tại của đối tượng mới có thể cho phép thay đổi trạng thái của nó. Việc cho phép môi trường tác động lên dữ liệu nội tại là tùy thuộc hoàn toàn vào người viết mã. Thuộc tính này của OOP cho phép một đối tượng có thể có sẵn các đặc tính mà đối tượng khác đã có, thông qua tính kế thừa. Cho phép các đối tượng chia sẻ cũng như mở rộng các đặc tính sẵn có mà không cần phải định nghĩa lại. Tuy vậy, không phải bất cứ ngôn ngữ định hướng nào cũng đều có tính chất này. Mà việc kế thừa chỉ có thể là lớp con thừa hưởng những gì lớp cha có và cho phép. Tính chất này của lập trình hướng đối tượng thể hiện ở việc gửi các thông điệp. Các phương thức để trả lời cho một thông điệp sẽ tùy vào đối tượng để có phản ứng khác nhau. Lập trình viên có thể định nghĩa một đặc tính cho loạt những đối tượng gần nhau. Tính đa hình này cho phép các chức năng khác nhau được thực thi khác nhau trên các đối tượng khác nhau. Tính trừu tượng cho phép lập trình hướng đối tượng có khả năng tập trung vào những cái cốt lõi, cần thiết nhất. Mỗi đối tượng có thể hoàn tất công việc nội bộ, báo cáo, thay đổi trạng thái, liên lạc với các đối tượng khác. Tính trừu tượng được xác định trong khái niệm lớp trừu tượng tập trung vào cốt lõi, bỏ qua những thứ không quan trọng của đối tượng. OOP – lập trình hướng đối tượng ra đời để khắc phục tất cả những nhược điểm của những phương pháp lập trình trước đó có quá nhiều bất cập. Lập trình hướng đối tượng rất sát với đời thực, áp dụng thực tế với chương trình. Khi đã hình dung được các đối tượng với các phương thức thuộc tính nào rồi. Thì lập trình viên có thể phát triển chương trình một cách tự nhiên, gần gũi với ngôn ngữ tự nhiên. OOP còn cung cấp khả năng sửa lỗi rất nhanh do gân gũi với ngôn ngữ tự nhiên. Dễ dàng chia hệ thống thành từng phần nhỏ để giao về cho các nhóm phát triển. Tích hợp rất tốt với các máy tính sẵn có, phù hợp với các hệ điều hành hiện đại. Khả năng tạo giao diện người dùng trực quan. OOP giúp tăng năng suất, đơn giản hóa độ phức tạp của bảo trì cũng như mở rộng phần mềm. Giảm nhẹ các thao tác viết mã cho người lập trình. Chính vì thế mà OOP được sử dụng rộng rãi, lập trình viên có thể tạo ra các ứng dụng mà các yếu tố bên ngoài có thể tương tác với chương trinh đó giống như các đối tượng vật lý. OOP hay còn gọi là lập trình hướng đối tượng. Là phương pháp lập trình được sử dụng trong thiết kế website và phát triển phần mềm, dựa trên kiến trúc lớp và đối tượng để quản lý luồng và dữ liệu khi code. Và những khái niệm thường dùng phải kể tới như:. Lớp chính là khuôn mẫu để tạo ra các đối tượng. Trong một lớp thường có các biến để mô tả các thuộc tính, các hàm để mô tả phương thức đối tượng. Để sử dụng lớp dễ dàng, người ta thường dùng lớp như một kiểu dữ liệu để tạo ra các đối tượng thông qua hệ thống hàm tạo. Đây là một lớp thông thường trong lập trình hướng đối tượng, nhưng có thêm tính chất kế thừa một phần hay toàn bộ các đặc tính của lớp khác. Lớp chia sẻ sự kế thừa là lớp cha. Lớp này không thể thực thể hóa thành đối tượng thực dụng. Mà được thiết kế để nhằm tạo ra một lớp có đặc tính tổng quát, tuy nhiên bản thân lớp đó chưa có hay không đủ ý nghĩa để tiến hành viết mã cho việc thực thể hóa. Phương thức là thuật ngữ để mô tả các hành vi của đối tượng hoặc của lớp. Khi thiết kế lập trình hướng đối tượng OOP, người ta có thể dùng các phương thức để mô tả và thực hiện các hành vi của đối tượng. Mỗi phương thức thường được định nghĩa là một hàm. Các thao tác để thực hiện hành vi được viết tại nội dung của hàm. Khi thực hiện hành vi này, đối tượng có thể cũng phải thực hiện những hành vi khác. Một phương thức trong một lớp có thể sử dụng phương thức khác thông qua quá trình thực hiện hành vi của mình. Ngoài ra, người ta thường định nghĩa thêm vài loại phương thức đặc biệt như: hàm tạo, hàm hủy…. Thuộc tính OOP của các lớp bao gồm các biến, các hằng, các tham số nội tại của lớp đó. Vai trò quan trọng nhất của các thuộc tính chính là các biến. Bởi chúng có thể bị thay đổi trong suốt cả quá trình hoạt động của một đối tượng. Thuộc tính có thể được xác định kiểu, có thể là kiểu dữ liệu cổ điển hay là một lớp đã được định nghĩa từ trước. Mỗi thuộc tính của một lớp còn được gọi là một thành viên dữ liệu của lớp đó. Thực thể (instance) là quá trình khai báo để có một tên (hay còn gọi là một biến) để trở thành mộ đối tượng từ một lớp nào đó. Một lớp sau khi được tiến hàng thực thể hóa gọi là một thực thể. Cũng giống như các biến thông thường, hai thực thể của cùng một lớp có thể có trạng thái nội tại khác nhau. Vì vậy, chúng hoàn toàn độc lập nhau nếu không có yêu cầu đặc biệt từ người lập trình hướng đối tượng.’. Trong OOP, đây là một khái niệm được dùng để gán cho các phương thức, các biến nội tại hay các lớp. Mà khi khai báo, người lập trình đã cho phép các câu lệnh bên ngoài và các đối tượng khác được phép sử dụng đến nó. Riêng tư là tính chất đóng mạnh nhất của một đặc tính hay một lớp. Khi gán cho một biến, một phương thức thì chỉ có thể được sử dụng bên trong của lớp mà chúng được định nghĩa. Mọi nỗ lực sử dụng trực tiếp đến chúng từ bên ngoài sẽ bị phủ nhận hay bị lỗi. Tùy vào ngôn ngữ lập trình hướng đối tượng mà có nhiều cách hiểu khác nhau. Nhưng nhìn chung đây là tính chất để áp dụng cho các phương thức, các biến nội tại, các lớp chỉ có trong nội bộ hay các lớp con của nó. Tính chất này cho phép một số trường hợp được dùng tới các đặc tính của một lớp. Trong quan niệm thông thường, lớp là khái niệm mang tính trừu tượng hóa rất cao. Trong lập trình hướng đối tượng OOP, khái niệm lớp cũng được hiểu tương tự với quan niệm đó. Vậy nên có quá trình thực thể hóa sau, tạo một đối tượng thuộc một lớp đã được định nghĩa trước đó. Ngoài những khái niệm nêu trên, tùy vào ngôn ngữ lập trình hướng đối tượng mà có thể sẽ có những chức năng OOP riêng biệt được cấp thêm vào. Hy vọng với những chia sẻ tường tận OOP là gì? Giải thích về các khái niệm liên quan đến lập trình hướng đối tượng trên đây đã giúp quý vị có cái nhìn tổng quan hơn về OOP.
