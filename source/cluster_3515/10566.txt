keyword: Hàm tạo (lập trình hướng đối tượng)
url: https://nguyenvanhieu.vn/ham-khoi-tao-va-ham-huy/
content:
Trong bài viết này chúng ta sẽ đi tìm hiểu một hàm thành viên rất quan trọng của lớp đó chính là hàm khởi tạo và hàm huỷ. Hàm khởi tạo là một hàm thành viên đặc biệt của một lớp. Nó sẽ được tự động gọi đến khi một đối tượng của lớp đó được khởi tạo. Nếu chúng ta không khai báo một hàm tạo, trình biên dịch C++ sẽ tự động tạo một hàm tạo mặc định cho chúng ta (sẽ là hàm không có tham số nào và có phần thân trống). Hàm tạo có thể rất hữu ích để thiết lập các giá trị khởi tạo cho các biến thành viên cụ thể. Như trong ví dụ trên, hàm tạo sinhvien() không hề có đối số nào được truyền vào. Theo ý kiến riêng của mình thì thông thường trong hàm loại này mình sẽ gán cho tất cả các thuộc tính về giá trị mặc định. Thuộc tính ten thuộc kiểu string mình sẽ đưa về mặc định là một chuối rỗng "". Với loại hàm tạo này ta có thể truyền đối số cho chúng. Thông thường, các đối số này giúp khởi tạo một đối tượng khi nó được tạo. Để khai báo một hàm khởi tạo có tham số chỉ cần thêm các tham số vào nó giống như cách bạn thêm tham số bất kỳ hàm nào khác.Khi bạn xác định phần thân của hàm tạo, hãy sử dụng các tham số để khởi tạo đối tượng. Sau khi khai báo hàm trong lớp, ta có thể dễ dàng dùng nó bằng cách truyền tham số trong khi khởi tạo đối tượng. Khi một đối tượng được khai báo trong hàm khởi tạo có tham số, các giá trị ban đầu phải được truyền dưới dạng đối số cho hàm tạo. Các hàm khởi tạo có thể được gọi một cách rõ ràng hoặc ngầm định. Nhưng thông thường để tiết kiệm code thì chúng ta hay sử dụng các ngầm định hơn. Nó được sử dụng để khởi tạo các thành phần dữ liệu khác nhau của các đối tượng khác nhau với các giá trị khác nhau khi chúng được tạo. Có thể hiểu đơn giản là ta sẽ có nhiều hơn một hàm khởi tạo trong cùng một lớp. Và phần này thì sẽ được mình trình bài trong bài sau nhé. Hàm khởi tạo sao chép là một hàm tạo mà tạo một đối tượng bằng việc khởi tạo nó với một đối tượng của cùng lớp đó, mà đã được tạo trước đó. Khi một đối tượng của lớp được truyền đối số dưới dạng tham số của một hàm. Khi một đối tượng được tạo ra dựa trên một đối tượng khác cùng lớp. Tuy nhiên trên thực tế thì không chắc chắn rằng hàm khởi tạo sao chép sẽ được gọi trong tất cả 4 trường hợp ở phía trên. Vì C++ tiêu chuẩn sẽ cho phép trình biên dịch tối ưu hoá bản sao trong một số trường hợp nhất định. Một ví dụ cho điều này là: Ví dụ về tối ưu hoá giá trị trả về ( Có thể gọi tắt là RVO). Nếu một hàm tạo sao chép không được định nghĩa trong một lớp, trình biên dịch sẽ tự nó định nghĩa nó. Vì thế phải thật lưu ý nếu lớp có các biến con trỏ hoặc có sử dụng cấp phát bộ nhớ động thì nên viết lại hàm. Chia sẻ nhỏ một chút là mình đã từng mắc lỗi tại đây do khi sử dụng cấp phát bộ nhớ động mà không viết lại hàm khởi tạo sao chép do đó dẫn đến việc truy cập sai ô nhớ. Hàm huỷ cũng là một hàm thành viên đặc biệt giống như hàm tạo, nó được dùng để phá huỷ hoặc xoá một đối tượng trong lớp. Cũng giống với hàm tạo, hàm huỷ có tên trùng với tên của lớp, nhưng điểm khác biệt ở đây là sẽ có thêm ~ ở đầu. Khác với hảm khởi tạo, hàm huỷ có thể có một và chỉ một mà thôi. Với C++ thì nếu ta không khai báo một hàm huỷ, trình biên dịch cũng sẽ tự định nghĩa một hàm huỷ. Thông thường thì hàm huỷ này hoạt động khá tốt, nhưng khi bài toán có sử dụng con trỏ, hoặc cấp phát bộ nhớ động thì ban nên khai báo một hàm huỷ riêng để tránh rỏ rỉ bộ nhớ. Nhưng với bản thân mình thông thường mình vẫn sẽ khai báo một hàm huỷ cho dù có dùng con trỏ hay cấp phát động hay không, và trong hàm huỷ đó mình sẽ đưa các thuộc tính của lớp về giá trị mặc định ( giống với hàm khởi tạo không tham số ). Bài viết của mình xin được kết thúc tại đây. Mọi thể comment ở bên dưới nếu thấy bất cứ điều gì không chính xác, hoặc đơn giản là muốn chia sẻ thêm những kiến thức tới mọi người. Cảm ơn mọi người. Chào tạm biệt và hẹn gặp lại !. Blog chia sẻ kiến thức lập trình của Hiếu, xây dựng cộng đồng những người học lập trình. Cho đi kiến thức mình có là cách học tập hiệu quả nhất
