keyword: Chuỗi thời gian
url: https://helpex.vn/article/chuoi-thoi-gian-danh-cho-nha-phat-trien-du-lieu-chuoi-thoi-gian-la-gi-608d0e482a29e6457961d830
content:
Các nhà phát triển và công ty sử dụng dữ liệu chuỗi thời gian mỗi ngày cho dù họ có biết hay không. Cho dù bạn đang thu thập dữ liệu từ các cảm biến IoT, phân tích hiệu suất thị trường trong quá khứ, giám sát cơ sở hạ tầng ứng dụng hoặc đám mây hay chạy ứng dụng giao đồ ăn theo yêu cầu, dữ liệu chuỗi thời gian sẽ giúp hoạt động kinh doanh của bạn. Nhưng chính xác thì dữ liệu chuỗi thời gian là gì và nó hữu ích như thế nào?Bài đăng này tìm cách cung cấp câu trả lời cho những câu hỏi đó và minh họa sức mạnh của dữ liệu chuỗi thời gian trong hoạt động bằng cách xem xét một kịch bản trong thế giới thực bằng cách sử dụng tập dữ liệu công khai từ Ủy ban Taxi & Limousine New York. Đầu tiên, chúng ta hãy đi sâu vào một vài khái niệm cơ bản để đặt nền tảng cho các truy vấn mà chúng ta sẽ viết và phân tích trong phần “Hãy viết mã”.Định nghĩa dữ liệu chuỗi thời gian đáng nhớ (không-phải-lý thuyết)Ở cấp độ cơ bản, dữ liệu chuỗi thời gian biểu thị cách một thứ gì đó thay đổi theo thời gian. “Cái gì đó” có thể là một hệ thống, quy trình, hành vi hoặc đối tượng.Khi mọi người nói về dữ liệu chuỗi thời gian, họ đang đề cập đến một tình huống trong đó mọi điểm dữ liệu có một dấu thời gian được liên kết với nó và chúng tôi nắm bắt và lưu giữ tất cả các điểm dữ liệu về hệ thống, quy trình, hành vi hoặc đối tượng được đề cập. Thay vì ghi đè dữ liệu trước đó, chúng tôi sử dụng dấu thời gian để phân biệt giữa các giá trị (ví dụ: khi điều gì đó xảy ra là - nếu không muốn nói - quan trọng hơn chính giá trị đó).Điều này dẫn chúng ta đến hai đặc điểm xác định của dữ liệu chuỗi thời gian:Thời gian là trục chính cho dữ liệu chuỗi thời gian (tức là trục X trên biểu đồ)Dữ liệu chuỗi thời gian INSERTSthì không UPDATES (tức là chúng tôi không ghi đè dữ liệu)Tóm lại, dữ liệu chuỗi thời gian thể hiện sự thay đổi theo thời gian, trong đó chúng tôi coi thời gian là trục chính của dữ liệu và các điểm dữ liệu mới được coi là INSERT không phải UPDATE.Bạn cũng có thể quan tâm đến việc đọc: Làm việc với dữ liệu chuỗi thời gianĐây là một bài tập suy nghĩ thú vị: Nếu bạn nghĩ về nó, tất cả dữ liệu đều là dữ liệu chuỗi thời gian!googletag.cmd.push(function());Nếu bạn giống tôi, điều này có thể dẫn đến việc bạn nói, "Chờ đã, sao !? ", Khi bạn cố gắng nghĩ về một ví dụ ngược lại về dữ liệu không phải là chuỗi thời gian trong tự nhiên. Tuy nhiên, cho đến ngày nay, tôi vẫn không thể nghĩ ra. Điều này là do tất cả dữ liệu vốn dĩ xảy ra vào một thời điểm nào đó (và thời gian chỉ trôi về phía trước khi chúng ta biết).Nếu chúng ta “vứt bỏ” hoặc bỏ qua yếu tố thời gian của dữ liệu, chúng ta sẽ mất thông tin có giá trị. Ngược lại, khi chúng tôi xem dữ liệu của mình là dữ liệu chuỗi thời gian, chúng tôi (và các nhóm của chúng tôi) có thể hiểu rõ hơn về cách thế giới và những thứ chúng tôi quan tâm đang thay đổi.Dữ liệu Chuỗi thời gian có thể giúp tôi như thế nào?Dữ liệu chuỗi thời gian rất quan trọng vì bằng cách nắm bắt cách mọi thứ thay đổi theo thời gian, dữ liệu chuỗi thời gian biến các điểm dữ liệu thành câu chuyện dữ liệu.Chúng ta có thể gộp lý do tại sao dữ liệu chuỗi thời gian lại hữu ích thành 3 loại.Dữ liệu chuỗi thời gian giúp mọi người:Phân tích quá khứTheo dõi hiện tạiLập kế hoạch và dự đoán tương laiHãy xem một ví dụ để lái xe về nhà. Hầu hết, nếu không phải tất cả chúng tôi, đã nhận được một gói hàng từ Amazon, DHL, UPS, FedEx, hoặc một số dịch vụ chuyển hàng trọn gói khác. Bây giờ, bạn sẽ không ngạc nhiên khi thông tin phân phối gói hàng của bạn là dữ liệu chuỗi thời gian!Bảng dưới đây cho thấy cách một công ty vận chuyển gói hàng có thể (và nên) sử dụng dữ liệu của họ để:Phân tích quá khứGiám sát hiện tạiDự đoán tương laiCông ty chuyển phát trọn gói (Amazon, DHL, FedEx, v.v.)Phân tích dữ liệu phân phối lịch sử để tối ưu hóa lộ trình phân phốiTheo dõi vị trí gói hàng thời gian thực và trạng thái giao hàngSử dụng dữ liệu lịch sử để dự đoán khối lượng và thời gian giao hàng, đưa ra kỳ vọng thực tế cho khách hàng và quản lý kế hoạch năng lực (ví dụ: bố trí đủ nhân viên lái xe trong thời gian cao điểm).Bởi vì tất cả dữ liệu có thể là chuỗi thời gian về bản chất, các công ty và nhóm thuộc mọi quy mô - từ các công ty khởi nghiệp nhỏ và những người đóng góp cho các dự án nguồn mở đến các công ty lớn trị giá hàng triệu đô la - có thể và nên tận dụng dữ liệu chuỗi thời gian.Bây giờ chúng ta đã có một số lý thuyết và định nghĩa, hãy bắt tay vào thực tế và xem xét một ví dụ thực tế.Lets Code: NYC Taxicab DataTôi làm việc tại văn phòng Timescale ở Thành phố New York, vì vậy tôi đang sử dụng một ví dụ về một thứ mà tôi và những người sống ở các thành phố lớn nhìn thấy hàng ngày: taxi. Ví dụ này sẽ minh họa cách dữ liệu chuỗi thời gian giúp chúng ta phân tích quá khứ.Kịch bản dưới đây được lấy từ Hello NYC , một hướng dẫn gồm 3 phần về phân tích dữ liệu taxi của Thành phố New York bằng PostgreSQL và Timescale. Không cần kiến thức trước ngoài kiến thức SQL cơ bản để hoàn thành hướng dẫn.Kịch bảnThành phố New York đã đặt mục tiêu giảm 20% lượng khí thải gây hiệu ứng nhà kính vào năm 2024. * Với số lượt đi taxi được thực hiện mỗi ngày, họ tin rằng việc nghiên cứu lịch sử của những người lái taxi trong quá khứ sẽ đóng vai trò quan trọng trong việc giúp họ đạt được mục tiêu này.Nhóm Dữ liệu New York * đã tuyển dụng bạn để giúp họ hiểu dữ liệu lịch sử đi taxi, rút ra thông tin chi tiết và sử dụng phân tích của bạn để lập kế hoạch cho tương lai. Mục tiêu của bạn là tiến hành phân tích tất cả các chuyến đi taxi của NYC TLC được thực hiện vào tháng 1 năm 2016. * Lưu ý: Đây là một kịch bản hư cấu. Tuy nhiên, chúng tôi đã thiết kế kịch bản này và các mục tiêu liên quan để phản ánh thực tế các câu hỏi mà các tổ chức quy hoạch thành phố thực có thể hỏi về dữ liệu của họ và các phương pháp được sử dụng để trả lời những câu hỏi đó.DatasetChúng tôi sẽ xem xét tập dữ liệu về tất cả các chuyến đi taxi được thực hiện tại Thành phố New York trong tháng 1 năm 2016. NYC TLC là cơ quan chịu trách nhiệm cấp phép và quản lý xe taxi Yellow Taxi của Thành phố New York và các phương tiện cho thuê khác. NYC TLC có hơn 200.000 phương tiện được cấp phép hoàn thành khoảng 1 triệu chuyến đi mỗi ngày - đó là rất nhiều chuyến đi!Họ thu thập các dữ liệu sau về mỗi chuyến đi:Ngày và giờ đón (như một dấu thời gian)Vị trí đón (vĩ độ và kinh độ)Ngày và giờ trả khách (như một dấu thời gian)Vị trí trả khách (vĩ độ và kinh độ)khoảng cách chuyến đi (trong dặm)Giá vé (tính theo USD)Số lượng hành kháchLoại giá (ví dụ: tiêu chuẩn, sân bay. Để biết thêm, hãy xem RateCodeID trong tài liệu này )Hình thức thanh toán (Tiền mặt, thẻ tín dụng. Để biết thêm, hãy xem Paymenttype trong tài liệu này )Phần 1 của hướng dẫn Hello NYC kiểm tra thiết kế của lược đồ được sử dụng để lưu trữ dữ liệu này trong cơ sở dữ liệu PostgreSQL một cách chặt chẽ hơn, vì vậy bạn có thể tham khảo nếu muốn biết thêm chi tiết. Tuy nhiên, chúng ta hãy xem xét một cách tổng quan dưới đây để chúng ta có thể làm quen với nó.Để dễ dàng sử dụng dữ liệu, chúng tôi đã thiết lập ba bảng để lưu trữ dữ liệu chuyến đi:1 bảng Postgres thông thường được gọi paymenttypes , bảng này ánh xạ các mã loại thanh toán bằng số với mô tả bằng tiếng Anh (ví dụ: thẻ tín dụng, tiền mặt, v.v.)SELECT * FROM paymenttypes1 bảng Postgres thông thường được gọi rates , bảng này ánh xạ các mã tỷ lệ bằng số với mô tả bằng tiếng Anh (ví dụ: đi xe tiêu chuẩn, đi sân bay JFK, đi sân bay Newark, v.v.).SELECT * FROM rates1 Timescale hypertable được gọi là rides , lưu trữ tất cả các dữ liệu ở trên mà NYC TLC đã thu thập cho các chuyến đi của hành khách vào năm 2016, khoảng thời gian được đề cập. Các siêu bảng hoạt động giống như các bảng Postgres thông thường, nhưng được tối ưu hóa để tự động phân vùng dữ liệu chuỗi thời gian cho hiệu quả và hiệu suất.SELECT * FROM rides. GROUP BY ratecode ORDER BY ratecode;Chúng tôi nhận được kết quả sau, cho biết số lượt đi của mỗi mã giá đã diễn ra:Mặc dù điều đó đúng về mặt kỹ thuật, nhưng chúng tôi muốn thứ gì đó con người có thể đọc được hơn. GROUP BY rates.description ORDER BY numtrips desc;Từ đây, chúng tôi có thể dễ dàng giải thích loại đi xe nào phổ biến nhất vì chúng tôi có nhiều mô tả dễ đọc hơn của con người về các loại đi xe, trong khi vẫn lưu trữ các loại đi xe đó dưới dạng số nguyên trong cơ sở dữ liệu để linh hoạt.Chúng ta có thể thấy rằng các loại hình đi xe phổ biến nhất là đi theo giá tiêu chuẩn và đi đến Sân bay Quốc tế JFK, một trong ba sân bay của Thành phố New York. Chúng ta cũng có thể thấy mức độ phổ biến hơn các chuyến đi đến sân bay JFK so với các chuyến đi đến Sân bay Quốc tế Newark Liberty (một sân bay khác ở khu vực New York), phổ biến hơn 13 lần dựa trên số chuyến đi đến mỗi điểm đến.Ví dụ đơn giản này - kết hợp dữ liệu chuyến đi riêng lẻ và các loại tốc độ ánh xạ dữ liệu với mô tả bằng tiếng Anh - minh họa một điểm mạnh mẽ: bằng cách kết hợp dữ liệu chuỗi thời gian với dữ liệu quan hệ hoặc kinh doanh, bạn có thể đơn giản hóa việc phân tích, khám phá thông tin chi tiết hữu ích cho dự án, ứng dụng hoặc kinh doanh, và làm cho mọi thứ dễ hiểu hơn đối với bạn, các thành viên trong nhóm và giám đốc điều hành của bạn.Kết luận và các bước tiếp theoTrong bài đăng này, chúng tôi đã trả lời câu hỏi "dữ liệu chuỗi thời gian là cái quái gì ?!" và chúng tôi đã học được rằng dữ liệu chuỗi thời gian biểu thị cách một thứ gì đó thay đổi theo thời gian. Chúng tôi cũng đã tìm hiểu lý do tại sao dữ liệu chuỗi thời gian lại hữu ích: nó giúp chúng tôi phân tích quá khứ, theo dõi hiện tại, dự đoán và lập kế hoạch cho tương lai. Cuối cùng, chúng tôi đã tìm hiểu về cách dữ liệu chuỗi thời gian có thể giúp một tổ chức thực sự bằng cách phân tích dữ liệu taxi NYC với TimescaleDB (và thực hiện các phép THAM GIA trên các siêu bảng Timescale và các bảng PostgreSQL thông thường).Để tiếp tục tìm hiểu thêm:Kết thúc hướng dẫn về NYC Taxicab : Kết thúc 3 phần hướng dẫn chúng ta đã bắt đầu ở trên và trả lời để trả lời các câu hỏi phức tạp hơn giúp chúng ta hiểu rõ hơn về quá khứ, chẳng hạn như "Có bao nhiêu chuyến đi từ Quảng trường Thời đại vào ngày đầu năm mới?" hoặc mô hình đó trong tương lai, chẳng hạn như, "Làm thế nào để phân tích các chuyến đi sân bay có thể giúp chúng ta xây dựng một thành phố xanh hơn? "Đọc thêm4 cơ sở dữ liệu chuỗi thời gian sẽ sử dụng trong năm 2019Giới thiệu về Chuỗi thời gian. Bài đăng này tìm cách cung cấp câu trả lời cho những câu hỏi đó và minh họa sức mạnh của dữ liệu chuỗi thời gian trong hoạt động bằng cách xem xét một kịch bản trong thế giới thực bằng cách sử dụng tập dữ liệu công khai từ Ủy ban Taxi & Limousine New York. Đầu tiên, chúng ta hãy đi sâu vào một vài khái niệm cơ bản để đặt nền tảng cho các truy vấn mà chúng ta sẽ viết và phân tích trong phần “Hãy viết mã”.Định nghĩa dữ liệu chuỗi thời gian đáng nhớ (không-phải-lý thuyết)Ở cấp độ cơ bản, dữ liệu chuỗi thời gian biểu thị cách một thứ gì đó thay đổi theo thời gian. “Cái gì đó” có thể là một hệ thống, quy trình, hành vi hoặc đối tượng.Khi mọi người nói về dữ liệu chuỗi thời gian, họ đang đề cập đến một tình huống trong đó mọi điểm dữ liệu có một dấu thời gian được liên kết với nó và chúng tôi nắm bắt và lưu giữ tất cả các điểm dữ liệu về hệ thống, quy trình, hành vi hoặc đối tượng được đề cập. Thay vì ghi đè dữ liệu trước đó, chúng tôi sử dụng dấu thời gian để phân biệt giữa các giá trị (ví dụ: khi điều gì đó xảy ra là - nếu không muốn nói - quan trọng hơn chính giá trị đó).Điều này dẫn chúng ta đến hai đặc điểm xác định của dữ liệu chuỗi thời gian:Thời gian là trục chính cho dữ liệu chuỗi thời gian (tức là trục X trên biểu đồ)Dữ liệu chuỗi thời gian INSERTSthì không UPDATES (tức là chúng tôi không ghi đè dữ liệu)Tóm lại, dữ liệu chuỗi thời gian thể hiện sự thay đổi theo thời gian, trong đó chúng tôi coi thời gian là trục chính của dữ liệu và các điểm dữ liệu mới được coi là INSERT không phải UPDATE.Bạn cũng có thể quan tâm đến việc đọc: Làm việc với dữ liệu chuỗi thời gianĐây là một bài tập suy nghĩ thú vị: Nếu bạn nghĩ về nó, tất cả dữ liệu đều là dữ liệu chuỗi thời gian!googletag.cmd.push(function());Nếu bạn giống tôi, điều này có thể dẫn đến việc bạn nói, "Chờ đã, sao !? ", Khi bạn cố gắng nghĩ về một ví dụ ngược lại về dữ liệu không phải là chuỗi thời gian trong tự nhiên. Tuy nhiên, cho đến ngày nay, tôi vẫn không thể nghĩ ra. Điều này là do tất cả dữ liệu vốn dĩ xảy ra vào một thời điểm nào đó (và thời gian chỉ trôi về phía trước khi chúng ta biết).Nếu chúng ta “vứt bỏ” hoặc bỏ qua yếu tố thời gian của dữ liệu, chúng ta sẽ mất thông tin có giá trị. Ngược lại, khi chúng tôi xem dữ liệu của mình là dữ liệu chuỗi thời gian, chúng tôi (và các nhóm của chúng tôi) có thể hiểu rõ hơn về cách thế giới và những thứ chúng tôi quan tâm đang thay đổi.Dữ liệu Chuỗi thời gian có thể giúp tôi như thế nào?Dữ liệu chuỗi thời gian rất quan trọng vì bằng cách nắm bắt cách mọi thứ thay đổi theo thời gian, dữ liệu chuỗi thời gian biến các điểm dữ liệu thành câu chuyện dữ liệu.Chúng ta có thể gộp lý do tại sao dữ liệu chuỗi thời gian lại hữu ích thành 3 loại.Dữ liệu chuỗi thời gian giúp mọi người:Phân tích quá khứTheo dõi hiện tạiLập kế hoạch và dự đoán tương laiHãy xem một ví dụ để lái xe về nhà. Hầu hết, nếu không phải tất cả chúng tôi, đã nhận được một gói hàng từ Amazon, DHL, UPS, FedEx, hoặc một số dịch vụ chuyển hàng trọn gói khác.
