keyword: Hiện tượng đa hình
url: https://codelearn.io/sharing/tinh-da-hinh-trong-oop
content:
Trong bài trước, chúng ta hiểu được thế nào là tính kế thừa trong OOP. Ở bài này chúng ta sẽ tìm hiểu thêm một tính chất nữa của lập trình hướng đối tượng đó là tính đa hình nhé. Một con trỏ có kiểu lớp cơ sở luôn có thể trỏ đến địa chỉ của một đối tượng của lớp dẫn xuất. Tuy nhiên, khi thực hiện lời gọi một phương thức của lớp, trình biên dịch sẽ quan tâm đến kiểu của con trỏ chứ không phải đối tượng mà con trỏ đang trỏ tới: phương thức của lớp mà con trỏ có kiểu được gọi chứ không phải phương thức của đối tượng mà con trỏ đang trỏ tới được gọi. thì chương trình sẽ gọi đến phương thức show() của lớp Mayvitinh, mà không gọi tới phương thức show() của lớp mayAcer.Để giải quyết vấn đề này, chúng ta cần sử dụng đến tính đa hình trong Lập trình hướng đối tượng. Mình sẽ giải thích chi tiết hơn ở bên dưới. Đa hình (polymorphism) nghĩa là có nhiều hình thái khác nhau. Tiêu biểu là, đa hình xuất hiện khi có một cấu trúc cấp bậc của các lớp và chúng liên quan với nhau bởi tính kế thừa. Mình lấy một ví dụ thực thế nhé:Một người cùng một lúc có thể có đặc điểm khác nhau. Giống như một người đàn học sinh thời là một người con trai, một người bạn, một người anh. Vì vậy, cùng một người sở hữu những hành vi khác nhau trong các tình huống khác nhau. Điều này được gọi là đa hình. Đa hình được coi là một trong những tính năng quan trọng của Lập trình hướng đối tượng. Tính đa hình này được sử dụng bằng cách nạp chồng hàm hoặc nạp chồng toán tử. Nạp chồng hàm (Function Overloading) cho phép sử dụng cùng một tên gọi cho các hàm “giống nhau” (có cùng mục đích). Nhưng khác nhau về kiểu dữ liệu tham số hoặc số lượng tham số. Nạp chồng hàm cho phép ta khai báo và định nghĩa các hàm trên cùng với một tên gọi. Trong ví dụ trên, ta chỉ dùng một hàm duy nhất có tên là hamIn() nhưng có thể dùng được cho 3 tình huống khác nhau. Đây là một thể hiện của tính đa hình. Nạp chồng toán tử (Operator Overloading) được dùng để định nghĩa toán tử cho có sẵn trong c++ phục vụ cho dữ liệu riêng do bạn tạo ra. Giả sử có lớp PhanSo và có các phương thức tính toán như Cong, Tru, Nhan, Chia.Nếu gặp một biểu thức phức tạp, số lượng phép tính nhiều thì việc sử dụng các phương thức trên khá khó khăn và có thể gây rối cho người lập trình. Vì thế ta sẽ nạp chồng lại các toán tử để có thể tạo một cái nhìn trực quan vào code, giảm thiểu các lỗi sai không đáng có. Trong ví dụ trên, ta đã nạp chồng lại toán tử cộng. Tính đa hình được thể hiện qua việc nạp chồng để tính tổng Box1 và Box2. Có thể thấy chương trình sau khi chạy sẽ gọi đến phương thức show() của lớp Mayvitinh, mà không gọi tới phương thức show() của lớp mayAcer. Trong ví dụ trên mình đã thêm từ khóa virtual vào hàm show() trong lớp cơ sở Mayvitinh.Từ khóa virtual này dùng để khai báo một hàm là hàm ảo. Khi khai báo hàm ảo với từ khóa virtual nghĩa là hàm này sẽ được gọi theo loại đối tượng được trỏ (hoặc tham chiếu), chứ không phải theo loại của con trỏ (hoặc tham chiếu). Và điều này dẫn đến kết quả khác nhau:. Khi nhận thấy có khai báo virtual trong lớp cơ sở, trình biên dịch sẽ thêm vào mỗi đối tượng của lớp cơ sở và các lớp dẫn xuất của nó một con trỏ chỉ đến bảng phương thức ảo (virtual function table). Bảng phương thức ảo là nơi chứa các con trỏ chỉ đến đoạn chương trình đã biên dịch ứng với các phương thức ảo. Mỗi lớp có một bảng phương thức ảo. Trình biên dịch chỉ lập bảng phương thức ảo khi bắt đầu có việc tạo đối tượng của lớp. Đến khi chương trình chạy, phương thức ảo của đối tượng mới được nối kết và thi hành thông qua con trỏ vptr. Vậy là series Lập trình hướng đối tượng của mình đến đây là kết thúc, chúng ta đã được tìm hiểu các khái niệm xoay quanh OOP trong C++ và những tính chất quan trọng của nó. Mình hy vọng bài viết của mình sẽ một phần giúp các ban trong việc học tập lập trình, đặc biệt là tìm hiểu về OOP. Nếu các bạn có thắc mắc hay câu hỏi gì có thể comment và rate bên dưới bài viết. Mình hy vọng sẽ nhận được sự ủng hộ của các bạn trong những bài khác với chủ đề khác. Khi làm việc với C, vấn đề sẽ xảy ra khi bạn dùng các collection này để lưu trữ kiểu dữ liệu nguyên thủy(int, double,.) vì khi đó sẽ xảy ra quá trình boxing/unboxing. Xin chào các bạn chắc hẳn các bạn đã quen thuộc với trò chơi xếp hình cổ điển, trong bài viết này mình sẽ hướng dẫn các bạn làm trò chơi này bằng ngôn ngữ Java nhé. Trò chơi sudoku đòi hỏi ta sự nhanh nhạy nhưng vẫn phải đảm bảo tính chính xác và cẩn thận. Hôm nay minh sẽ hướng dẫn các bạn lập trình game sudoku nhé. Có rất nhiều vai trò khác tham gia vào phát triển web. Nhưng hầu hết, thường sẽ có hai loại lập trình viên: một cho front end và một cho backend.
