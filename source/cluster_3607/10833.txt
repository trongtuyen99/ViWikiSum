keyword: Logarit nhị phân
url: https://hoctaphay.com/logarit/logarit-nhi-phan
content:
Logarit nhị phân online là phép tính logarit trực tuyến giúp bạn tính toán nhanh kết quả dễ dàng và chính xác nhất. Giờ đây, bạn có thể hoàn thành các bài tập Logarit nhị phân tại bảng tính trực tuyến của HocTapHay.Com, ngoài ra ôn tập định nghĩa, tính chất. Trong toán học, logarit nhị phân ()((log2 n)) là lũy thừa mà số 2 cần phải được nâng lên để được số n, nghĩa là với mọi số thực x thì (x = log2n ⇔ 2^x = n). Ví dụ, logarit nhị phân của 1 là 0, logarit nhị phân của 2 là 1, logarit nhị phân của 4 là 2 và logarit nhị phân của 32 là 5. Logarit nhị phân là một trong các hàm toán học chuẩn của ngôn ngữ C và có trong một số bộ chương trình phần mềm toán học khác. Phần nguyên của logarit nhị phân có thể được tìm qua phép toán tìm bit 1 đầu tiên trên một giá trị nguyên hoặc tìm số mũ của một giá trị dấu phẩy động, trong khi phần thập phân có thể tính được một cách hiệu quả. Hàm logarit nhị phân được định nghĩa là hàm ngược của hàm lũy thừa của 2, vốn là một hàm số tăng trên tập hợp số thực dương và do đó có một hàm ngược duy nhất. Trong định nghĩa, khi thay logarit thực bằng logarit phức thì logarit nhị phân có thể được mở rộng cho số phức. Trong toán học, logarit nhị phân của một số n được ký hiệu là (log2 n). Tuy nhiên, tùy theo lĩnh vực mà nó được sử dụng, còn tồn tại thêm một số ký hiệu khác. Một số tác giả ký hiệu logarit nhị phân là lgn; đây là ký hiệu được liệt kê trong The Chicago Manual of Style. Theo Donald Knuth, ký hiệu này do Edward Reingold đề xuất, nhưng thực tế nó đã được dùng trong lý thuyết thông tin và khoa học máy tính từ trước khi Reingold bắt đầu sự nghiệp. Logarit tự nhiên cũng được viết là logn cùng một câu trước đó giải thích rằng cơ số mặc định của logarit là 2. Một ký hiệu khác của chính hàm số đó (đặc biệt xuất hiện trong các bài viết khoa học của Đức) là ldn, viết tắt của cụm từ logarithmus dualis hoặc logarithmus dyadis trong tiếng Latinh. Các tiêu chuẩn DIN 1302, ISO 31-11 và ISO 80000-2 còn khuyến nghị dùng một ký hiệu khác nữa, lbn. Theo các tiêu chuẩn này, không nên dùng lgn để ký hiệu logarit nhị phân vì nó được dùng riêng cho logarit thập phân (logn). Một cách dễ dàng để tính (log2 n) trên các máy tính không có sẵn hàm (log2) là thông qua hàm logarit tự nhiên (ln) hoặc logarit thập phân (log hoặc (log)), có thể được tìm thấy trong hầu hết máy tính bỏ túi. Theo công thức đổi cơ số thì:. Logarit nhị phân có thể được làm thành một hàm với đầu vào là số nguyên và trả về số nguyên bằng cách làm tròn nó lên hay xuống. Hai dạng này của logarit nhị phân nguyên được liên hệ bằng công thức:. Có thể mở rộng định nghĩa này bằng cách quy ước ( = -1). Khi đó, hàm này có liên hệ với số bit 0 đứng trước trong biểu diễn nhị phân không dấu 32 bit của n, nlz(n): ( = 31 – nlz(n)). Logarit nhị phân nguyên có thể được xác định là chỉ số của bit 1 có trọng số cao nhất trong đầu vào (tính từ số 0). Trong trường hợp này, đó chính là phần bù của phép toán tìm bit 1 đầu tiên, dùng để tìm chỉ số của bit 1 có trọng số thấp nhất. Nhiều nền tảng phần cứng có hỗ trợ tìm số bit 0 đứng trước hoặc các phép toán tương đương, cho phép tìm logarit nhị phân một cách nhanh chóng. Các hàm fls và flsl trong hạt nhân Linux và trong một số phiên bản của thư viện phần mềm libc cũng tính được logarit nhị phân (làm tròn thành số nguyên cộng 1). Với một số thực dương bất kỳ, logarit nhị phân có thể được chia thành hai phần để tính. Trước tiên, ta tính phần nguyên () để đưa về thành bài toán mà trong đó đối số của logarit nằm trong nửa khoảng. Với số thực dấu phẩy động, phần nguyên là số mũ dấu phẩy động, còn đối với số nguyên thì nó được xác định bằng cách thực hiện phép toán đếm số bit 0 đứng trước. Phần thập phân của kết quả thu được là (log2 y) và có thể được tính chỉ bằng phép lặp cùng các phép nhân và phép chia cơ bản. Thuật toán tính phần thập phân có thể được mô tả bằng mã giả như sau:. Trong trường hợp đặc biệt khi phần thập phân ở bước 1 được xác định là bằng 0, đó là một chuỗi hữu hạn kết thúc tại một số hạng nào đó. Ngược lại, đó là một chuỗi vô hạn hội tụ theo dấu hiệu d’Alembert vì mỗi số hạng luôn nhỏ hơn số hạng liền trước (do (mi > 0)). Khi ứng dụng thực tế, phải cắt ngắn đi chuỗi vô hạn này để đạt kết quả gần đúng. Nếu chuỗi dừng lại ở số hạng thứ i thì sai số trong kết quả là nhỏ hơn (2^). Nhập địa chỉ email của bạn để đăng ký blog này và nhận thông báo về các bài viết mới qua email. Cám Ơn Các Bạn Đã Ghé Thăm Website, Ở Đây Tôi Có Những Người Bạn, Hãy Xem Thử Họ Có Gì Nhé: Theza2.mobie.in Bla Bla…
